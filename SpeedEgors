-- Carrega a Orion Library
local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/VerbalHubz/Verbal-Hub/refs/heads/main/Orion%20Hub%20Ui%20V3'))()

local Window = OrionLib:MakeWindow({Name = "Fast Animation + Mirage Tools", HidePremium = false, SaveConfig = true, ConfigFolder = "FastAnimFE"})

-- // Fast Animation
local enabled = false
local stopLoop = false

local function fastAnimationLoop()
    task.spawn(function()
        while not stopLoop do
            task.wait()
            local player = game:GetService("Players").LocalPlayer
            local char = player.Character or player.CharacterAdded:Wait()
            local humanoid = char:FindFirstChildOfClass("Humanoid") or char:FindFirstChildOfClass("AnimationController")
            if not humanoid then continue end

            for _, track in next, humanoid:GetPlayingAnimationTracks() do
                track:AdjustSpeed(15)
            end
        end
    end)
end

local TabAnim = Window:MakeTab({
    Name = "Animation",
    Icon = "rbxassetid://7733960981",
    PremiumOnly = false
})

TabAnim:AddToggle({
    Name = "Ativar Fast Animation",
    Default = false,
    Callback = function(Value)
        enabled = Value
        if enabled then
            stopLoop = false
            fastAnimationLoop()
        else
            stopLoop = true
        end
    end    
})

-- // TheFake (Speed Mirages)
local TabFake = Window:MakeTab({
    Name = "TheFake",
    Icon = "rbxassetid://7734053427",
    PremiumOnly = false
})

-- Speed Mirage 1
TabFake:AddButton({
    Name = "Speed Mirage 1",
    Callback = function()
        loadstring([[
        -- ⚡ Ultra Fast Speed Mirage Tool
        local player = game.Players.LocalPlayer
        local cam = workspace.CurrentCamera
        local uis = game:GetService("UserInputService")

        local tool = Instance.new("Tool")
        tool.RequiresHandle = false
        tool.Name = "⚡Speed Mirage"
        tool.Parent = player.Backpack

        local teleporting = false
        local returnDelay = 0.05
        local originalCFrame
        local targetPosition

        local function getWorldPosition(input)
            local unitRay = cam:ScreenPointToRay(input.Position.X, input.Position.Y)
            local ray = Ray.new(unitRay.Origin, unitRay.Direction * 500)
            local part, pos = workspace:FindPartOnRay(ray, player.Character)
            return pos or (unitRay.Origin + unitRay.Direction * 20)
        end

        local function startMirage(pos)
            if teleporting then return end
            local char = player.Character
            if not char then return end
            local hrp = char:FindFirstChild("HumanoidRootPart")
            if not hrp then return end

            teleporting = true
            originalCFrame = hrp.CFrame
            targetPosition = pos

            task.spawn(function()
                while teleporting and hrp do
                    hrp.CFrame = CFrame.new(targetPosition)
                    task.wait(returnDelay)
                    if not teleporting then break end
                    hrp.CFrame = originalCFrame
                    task.wait(returnDelay)
                end
            end)
        end

        local function stopMirage()
            teleporting = false
        end

        tool.Equipped:Connect(function()
            local inputBegin
            inputBegin = uis.InputBegan:Connect(function(input, processed)
                if processed then return end
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    local pos = getWorldPosition(input)
                    startMirage(pos)
                end
            end)

            tool.Unequipped:Connect(function()
                stopMirage()
                if inputBegin then inputBegin:Disconnect() end
            end)
        end)
        ]])()
    end
})

-- Speed Mirage 2
TabFake:AddButton({
    Name = "Speed Mirage 2",
    Callback = function()
        loadstring([[
        local player = game.Players.LocalPlayer
        local backpack = player:WaitForChild("Backpack")

        local tool = Instance.new("Tool")
        tool.Name = "Speed Mirage"
        tool.RequiresHandle = false
        tool.Parent = backpack

        local mouse = nil
        local running = false
        local loopCoroutine = nil
        local clickConnection = nil

        local teleportDelay = 0.03

        local function teleportLoop(originalPos, targetPos)
            while running do
                local character = player.Character
                if not character then break end
                local hrp = character:FindFirstChild("HumanoidRootPart")
                if not hrp then break end

                hrp.CFrame = targetPos
                task.wait(teleportDelay)
                hrp.CFrame = originalPos
                task.wait(teleportDelay)
            end
        end

        tool.Equipped:Connect(function()
            mouse = player:GetMouse()

            local function toggleTeleport()
                if running then
                    running = false
                    if loopCoroutine then
                        loopCoroutine = nil
                    end
                else
                    local character = player.Character
                    if not character then return end
                    local hrp = character:FindFirstChild("HumanoidRootPart")
                    if not hrp then return end

                    local originalPos = hrp.CFrame
                    local targetPos = CFrame.new(mouse.Hit.p.X, hrp.Position.Y, mouse.Hit.p.Z)

                    running = true
                    loopCoroutine = coroutine.create(function()
                        teleportLoop(originalPos, targetPos)
                    end)
                    coroutine.resume(loopCoroutine)
                end
            end

            clickConnection = mouse.Button1Down:Connect(toggleTeleport)
        end)

        tool.Unequipped:Connect(function()
            running = false
            if loopCoroutine then
                loopCoroutine = nil
            end
            if clickConnection then
                clickConnection:Disconnect()
                clickConnection = nil
            end
        end)
        ]])()
    end
})

-- Speed Mirage 3
TabFake:AddButton({
    Name = "Speed Mirage 3 (5 Clones)",
    Callback = function()
        loadstring([[
        local player = game.Players.LocalPlayer
        local backpack = player:WaitForChild("Backpack")

        local tool = Instance.new("Tool")
        tool.Name = "Speed Mirage"
        tool.RequiresHandle = false
        tool.Parent = backpack

        local mouse = nil
        local running = false
        local loopCoroutine = nil
        local clickConnection = nil

        local maxTeleportDelay = 0.03
        local minTeleportDelay = 0.5
        local accelerationRate = 0.05
        local currentDelay = minTeleportDelay

        local function teleportLoop(originalPos, targetPos)
            currentDelay = minTeleportDelay
            while running do
                local character = player.Character
                if not character then break end
                local hrp = character:FindFirstChild("HumanoidRootPart")
                if not hrp then break end

                hrp.CFrame = targetPos
                task.wait(currentDelay)
                hrp.CFrame = originalPos
                task.wait(currentDelay)

                if currentDelay > maxTeleportDelay then
                    currentDelay = math.max(maxTeleportDelay, currentDelay - accelerationRate)
                end
            end
        end

        tool.Equipped:Connect(function()
            mouse = player:GetMouse()

            local function toggleTeleport()
                if running then
                    running = false
                    if loopCoroutine then
                        loopCoroutine = nil
                    end
                else
                    local character = player.Character
                    if not character then return end
                    local hrp = character:FindFirstChild("HumanoidRootPart")
                    if not hrp then return end

                    local originalPos = hrp.CFrame
                    local targetPos = CFrame.new(mouse.Hit.p.X, hrp.Position.Y, mouse.Hit.p.Z)

                    running = true
                    loopCoroutine = coroutine.create(function()
                        teleportLoop(originalPos, targetPos)
                    end)
                    coroutine.resume(loopCoroutine)
                end
            end

            clickConnection = mouse.Button1Down:Connect(toggleTeleport)
        end)

        tool.Unequipped:Connect(function()
            running = false
            if loopCoroutine then
                loopCoroutine = nil
            end
            if clickConnection then
                clickConnection:Disconnect()
                clickConnection = nil
            end
            currentDelay = minTeleportDelay
        end)
        ]])()
    end
})

-- // Freeze Camera
local TabFreeze = Window:MakeTab({
    Name = "Freeze Camera",
    Icon = "rbxassetid://7734026524",
    PremiumOnly = false
})

TabFreeze:AddButton({
    Name = "Ativar Freeze Camera GUI",
    Callback = function()
        loadstring([[
        local Players = game:GetService("Players")
        local RunService = game:GetService("RunService")
        local player = Players.LocalPlayer
        local camera = workspace.CurrentCamera

        local screenGui = Instance.new("ScreenGui")
        screenGui.Name = "CameraFreezeGUI"
        screenGui.ResetOnSpawn = false
        screenGui.Parent = player:WaitForChild("PlayerGui")

        local frame = Instance.new("Frame")
        frame.Size = UDim2.new(0, 200, 0, 100)
        frame.Position = UDim2.new(0, 50, 0, 50)
        frame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
        frame.Parent = screenGui

        local freezeButton = Instance.new("TextButton")
        freezeButton.Size = UDim2.new(0, 180, 0, 40)
        freezeButton.Position = UDim2.new(0, 10, 0, 10)
        freezeButton.Text = "Freeze Camera"
        freezeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        freezeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        freezeButton.Parent = frame

        local unfreezeButton = Instance.new("TextButton")
        unfreezeButton.Size = UDim2.new(0, 180, 0, 40)
        unfreezeButton.Position = UDim2.new(0, 10, 0, 50)
        unfreezeButton.Text = "Unfreeze Camera"
        unfreezeButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        unfreezeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        unfreezeButton.Parent = frame

        local frozenCFrame = nil

        freezeButton.MouseButton1Click:Connect(function()
            if player.Character and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0 then
                frozenCFrame = camera.CFrame
                camera.CameraType = Enum.CameraType.Scriptable
                camera.CFrame = frozenCFrame
            end
        end)

        unfreezeButton.MouseButton1Click:Connect(function()
            camera.CameraType = Enum.CameraType.Custom
            frozenCFrame = nil
        end)

        RunService.RenderStepped:Connect(function()
            if camera.CameraType == Enum.CameraType.Scriptable and frozenCFrame then
                camera.CFrame = frozenCFrame
            end
        end)

        local function onCharacterAdded(char)
            local humanoid = char:WaitForChild("Humanoid")
            humanoid.Died:Connect(function()
                camera.CameraType = Enum.CameraType.Custom
                frozenCFrame = nil
            end)
        end

        if player.Character then
            onCharacterAdded(player.Character)
        end
        player.CharacterAdded:Connect(onCharacterAdded)
        ]])()
    end
})
